            self.annotator.image = self.files.currentItem()
            filename = self.annotator.image.base[:len(self.annotator.image.base) - 4] + '.txt'
            if os.path.exists(os.path.join(lbl_dir, filename)):
                print(os.path.join(lbl_dir, filename))
                file = open(os.path.join(lbl_dir, filename), 'r')
                c = []
                for line in file:
                    if line != '':
                        print(line.removesuffix('\n'))
                        c.append(line.removesuffix('\n'))
                print(c)
                if c[0] != '':
                    self.draw.loadAnnotation(c)
                else:
                    print('Empty Class. Skipping.')

    def loadAnnotation(self, ann):
        listy = []

        print(ann)
        x = ''
        for o in ann:
            x = ''
            print(len(ann))
            for i in o:
                if i == ' ':
                    b = ann.index(o)
                    print(o[len(x)+1:])
                    ann.__setitem__(b,  o[len(x)+1:])
                    x = ''
                    break
                else:
                    x += i
        for o in ann:
            for i in o:
                if i == ' ':
                    listy.append(int(float(x)*640))
                    x = ''
                else:
                    x += str(i)
        self.cords = []
        first, last = listy[0], listy[1]
        f_count = 0
        for i in range(0, len(listy)-1, +2):
            if (listy[i], listy[i+1]) == (first, last):
                f_count += 1
                if f_count == 2:
                    self.updateCanvas()
                    self.new_ann()

                    f_count = 0
                    if (i+3) < (len(listy)-1):
                        first, last = listy[i+2], listy[i+3]
            p = QPoint(listy[i], listy[i+1])
            self.cords.append(p)
        self.cords = []


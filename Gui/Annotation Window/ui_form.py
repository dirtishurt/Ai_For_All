# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'form.ui'
##
## Created by: Qt User Interface Compiler version 6.7.0
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QAbstractItemView, QApplication, QFrame, QListWidgetItem,
    QMainWindow, QMenu, QMenuBar, QSizePolicy,
    QTabWidget, QToolBar, QWidget)

from Annotator import Annotator
from Files import Files

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.setWindowModality(Qt.ApplicationModal)
        MainWindow.setEnabled(True)
        MainWindow.resize(938, 549)
        sizePolicy = QSizePolicy(QSizePolicy.Policy.MinimumExpanding, QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(16)
        sizePolicy.setVerticalStretch(9)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QSize(0, 0))
        MainWindow.setMouseTracking(True)
#if QT_CONFIG(tooltip)
        MainWindow.setToolTip(u"")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        MainWindow.setWhatsThis(u"")
#endif // QT_CONFIG(whatsthis)
        MainWindow.setLayoutDirection(Qt.LeftToRight)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setToolButtonStyle(Qt.ToolButtonFollowStyle)
        MainWindow.setDocumentMode(False)
        MainWindow.setTabShape(QTabWidget.Rounded)
        self.actionBox = QAction(MainWindow)
        self.actionBox.setObjectName(u"actionBox")
        self.actionBox.setCheckable(True)
        self.actionBox.setChecked(False)
        self.actionBox.setEnabled(True)
        icon = QIcon()
        icon.addFile(u"bounding-box.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionBox.setIcon(icon)
        self.actionBox.setShortcutContext(Qt.WidgetWithChildrenShortcut)
        self.actionBox.setMenuRole(QAction.ApplicationSpecificRole)
        self.actionPolygonTool = QAction(MainWindow)
        self.actionPolygonTool.setObjectName(u"actionPolygonTool")
        self.actionPolygonTool.setCheckable(True)
        self.actionPolygonTool.setChecked(False)
        self.actionPolygonTool.setEnabled(True)
        icon1 = QIcon()
        icon1.addFile(u"polygon.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPolygonTool.setIcon(icon1)
        self.actionPolygonTool.setShortcutContext(Qt.ApplicationShortcut)
        self.actionPolygonTool.setAutoRepeat(True)
        self.actionPolygonTool.setVisible(True)
        self.actionPolygonTool.setMenuRole(QAction.ApplicationSpecificRole)
        self.actiondelete = QAction(MainWindow)
        self.actiondelete.setObjectName(u"actiondelete")
        self.actiondelete.setCheckable(True)
        icon2 = QIcon()
        icon2.addFile(u"delete-icon-1864x2048-bp2i0gor.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actiondelete.setIcon(icon2)
        self.actiondelete.setMenuRole(QAction.ApplicationSpecificRole)
        self.actionget_files = QAction(MainWindow)
        self.actionget_files.setObjectName(u"actionget_files")
        self.actionget_files.setMenuRole(QAction.ApplicationSpecificRole)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        sizePolicy1 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy1.setHorizontalStretch(16)
        sizePolicy1.setVerticalStretch(9)
        sizePolicy1.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy1)
        self.centralwidget.setSizeIncrement(QSize(16, 9))
        self.Annotator = Annotator(self.centralwidget)
        self.Annotator.setObjectName(u"Annotator")
        self.Annotator.setEnabled(True)
        self.Annotator.setGeometry(QRect(0, 0, 640, 500))
        palette = QPalette()
        brush = QBrush(QColor(66, 66, 66, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        self.Annotator.setPalette(palette)
        self.Annotator.setMouseTracking(True)
        self.Annotator.setFocusPolicy(Qt.StrongFocus)
        self.Annotator.setAutoFillBackground(True)
        self.listWidget = Files(self.centralwidget)
        self.listWidget.setObjectName(u"listWidget")
        self.listWidget.setGeometry(QRect(640, 0, 256, 501))
        sizePolicy2 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.listWidget.sizePolicy().hasHeightForWidth())
        self.listWidget.setSizePolicy(sizePolicy2)
        self.listWidget.setBaseSize(QSize(0, 0))
        self.listWidget.setMouseTracking(True)
        self.listWidget.setAcceptDrops(True)
        self.listWidget.setAutoFillBackground(True)
        self.listWidget.setFrameShadow(QFrame.Sunken)
        self.listWidget.setTabKeyNavigation(True)
        self.listWidget.setAlternatingRowColors(True)
        self.listWidget.setSelectionMode(QAbstractItemView.MultiSelection)
        MainWindow.setCentralWidget(self.centralwidget)
        self.listWidget.raise_()
        self.Annotator.raise_()
        self.toolBar = QToolBar(MainWindow)
        self.toolBar.setObjectName(u"toolBar")
        self.toolBar.setEnabled(True)
        sizePolicy3 = QSizePolicy(QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Preferred)
        sizePolicy3.setHorizontalStretch(0)
        sizePolicy3.setVerticalStretch(0)
        sizePolicy3.setHeightForWidth(self.toolBar.sizePolicy().hasHeightForWidth())
        self.toolBar.setSizePolicy(sizePolicy3)
        self.toolBar.setMinimumSize(QSize(0, 0))
        self.toolBar.setMaximumSize(QSize(25, 500))
        self.toolBar.setBaseSize(QSize(25, 500))
        palette1 = QPalette()
        brush1 = QBrush(QColor(71, 71, 71, 255))
        brush1.setStyle(Qt.SolidPattern)
        palette1.setBrush(QPalette.Active, QPalette.WindowText, brush1)
        brush2 = QBrush(QColor(62, 180, 137, 255))
        brush2.setStyle(Qt.SolidPattern)
        palette1.setBrush(QPalette.Active, QPalette.Button, brush2)
        brush3 = QBrush(QColor(70, 70, 70, 255))
        brush3.setStyle(Qt.SolidPattern)
        palette1.setBrush(QPalette.Active, QPalette.Text, brush3)
        palette1.setBrush(QPalette.Active, QPalette.ButtonText, brush1)
        brush4 = QBrush(QColor(112, 112, 112, 255))
        brush4.setStyle(Qt.SolidPattern)
        palette1.setBrush(QPalette.Active, QPalette.Base, brush4)
        palette1.setBrush(QPalette.Active, QPalette.Window, brush3)
        brush5 = QBrush(QColor(72, 72, 72, 255))
        brush5.setStyle(Qt.SolidPattern)
        palette1.setBrush(QPalette.Active, QPalette.ToolTipText, brush5)
        palette1.setBrush(QPalette.Inactive, QPalette.WindowText, brush1)
        palette1.setBrush(QPalette.Inactive, QPalette.Button, brush5)
        palette1.setBrush(QPalette.Inactive, QPalette.Text, brush3)
        palette1.setBrush(QPalette.Inactive, QPalette.ButtonText, brush1)
        palette1.setBrush(QPalette.Inactive, QPalette.Base, brush4)
        palette1.setBrush(QPalette.Inactive, QPalette.Window, brush3)
        palette1.setBrush(QPalette.Inactive, QPalette.HighlightedText, brush2)
        palette1.setBrush(QPalette.Inactive, QPalette.ToolTipText, brush5)
        brush6 = QBrush(QColor(0, 0, 0, 255))
        brush6.setStyle(Qt.SolidPattern)
        palette1.setBrush(QPalette.Disabled, QPalette.Button, brush6)
        palette1.setBrush(QPalette.Disabled, QPalette.Base, brush3)
        palette1.setBrush(QPalette.Disabled, QPalette.Window, brush3)
        palette1.setBrush(QPalette.Disabled, QPalette.ToolTipText, brush5)
        self.toolBar.setPalette(palette1)
        self.toolBar.setCursor(QCursor(Qt.ArrowCursor))
        self.toolBar.setMouseTracking(True)
        self.toolBar.setFocusPolicy(Qt.StrongFocus)
        self.toolBar.setContextMenuPolicy(Qt.ActionsContextMenu)
        self.toolBar.setWindowTitle(u"toolBar")
#if QT_CONFIG(tooltip)
        self.toolBar.setToolTip(u"")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.toolBar.setWhatsThis(u"")
#endif // QT_CONFIG(whatsthis)
        self.toolBar.setLayoutDirection(Qt.LeftToRight)
        self.toolBar.setMovable(False)
        self.toolBar.setToolButtonStyle(Qt.ToolButtonIconOnly)
        self.toolBar.setFloatable(True)
        MainWindow.addToolBar(Qt.ToolBarArea.LeftToolBarArea, self.toolBar)
        self.menuBar = QMenuBar(MainWindow)
        self.menuBar.setObjectName(u"menuBar")
        self.menuBar.setGeometry(QRect(0, 0, 938, 21))
        self.menuReturn = QMenu(self.menuBar)
        self.menuReturn.setObjectName(u"menuReturn")
        self.menuSave = QMenu(self.menuBar)
        self.menuSave.setObjectName(u"menuSave")
        self.menuOpen_Images = QMenu(self.menuBar)
        self.menuOpen_Images.setObjectName(u"menuOpen_Images")
        MainWindow.setMenuBar(self.menuBar)

        self.toolBar.addAction(self.actionBox)
        self.toolBar.addAction(self.actionPolygonTool)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actiondelete)
        self.menuBar.addAction(self.menuReturn.menuAction())
        self.menuBar.addAction(self.menuSave.menuAction())
        self.menuBar.addAction(self.menuOpen_Images.menuAction())
        self.menuOpen_Images.addAction(self.actionget_files)

        self.retranslateUi(MainWindow)

        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"MainWindow", None))
        self.actionBox.setText(QCoreApplication.translate("MainWindow", u"Box", None))
#if QT_CONFIG(tooltip)
        self.actionBox.setToolTip(QCoreApplication.translate("MainWindow", u"Bounding Box Mode", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionBox.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+B", None))
#endif // QT_CONFIG(shortcut)
        self.actionPolygonTool.setText(QCoreApplication.translate("MainWindow", u"PolygonTool", None))
#if QT_CONFIG(tooltip)
        self.actionPolygonTool.setToolTip(QCoreApplication.translate("MainWindow", u"FreeForm selection mode", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionPolygonTool.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+P", None))
#endif // QT_CONFIG(shortcut)
        self.actiondelete.setText(QCoreApplication.translate("MainWindow", u"delete", None))
#if QT_CONFIG(tooltip)
        self.actiondelete.setToolTip(QCoreApplication.translate("MainWindow", u"remove annotations", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actiondelete.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Alt+Shift+D", None))
#endif // QT_CONFIG(shortcut)
        self.actionget_files.setText(QCoreApplication.translate("MainWindow", u"get files", None))
#if QT_CONFIG(whatsthis)
        self.listWidget.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
        self.menuReturn.setTitle(QCoreApplication.translate("MainWindow", u"Return", None))
        self.menuSave.setTitle(QCoreApplication.translate("MainWindow", u"Save", None))
        self.menuOpen_Images.setTitle(QCoreApplication.translate("MainWindow", u"Open Images", None))
    # retranslateUi


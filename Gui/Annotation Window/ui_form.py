# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'form.ui'
##
## Created by: Qt User Interface Compiler version 6.7.0
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QAbstractItemView, QApplication, QFrame, QLineEdit,
    QListWidgetItem, QMainWindow, QMenu, QMenuBar,
    QPushButton, QSizePolicy, QTabWidget, QToolBar,
    QWidget)

from Annotator import Annotator
from Classes import Classes
from Draw import Draw
from Files import Files

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.setWindowModality(Qt.WindowModality.ApplicationModal)
        MainWindow.setEnabled(True)
        MainWindow.resize(921, 673)
        sizePolicy = QSizePolicy(QSizePolicy.Policy.MinimumExpanding, QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(16)
        sizePolicy.setVerticalStretch(9)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QSize(921, 673))
        MainWindow.setMaximumSize(QSize(921, 673))
        palette = QPalette()
        brush = QBrush(QColor(34, 34, 34, 255))
        brush.setStyle(Qt.SolidPattern)
        palette.setBrush(QPalette.Active, QPalette.Window, brush)
        palette.setBrush(QPalette.Inactive, QPalette.Window, brush)
        palette.setBrush(QPalette.Disabled, QPalette.Base, brush)
        palette.setBrush(QPalette.Disabled, QPalette.Window, brush)
        MainWindow.setPalette(palette)
        MainWindow.setMouseTracking(True)
#if QT_CONFIG(tooltip)
        MainWindow.setToolTip(u"")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        MainWindow.setWhatsThis(u"")
#endif // QT_CONFIG(whatsthis)
        MainWindow.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        MainWindow.setAutoFillBackground(True)
        MainWindow.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonFollowStyle)
        MainWindow.setDocumentMode(False)
        MainWindow.setTabShape(QTabWidget.TabShape.Rounded)
        self.actionBox = QAction(MainWindow)
        self.actionBox.setObjectName(u"actionBox")
        self.actionBox.setCheckable(True)
        self.actionBox.setChecked(False)
        self.actionBox.setEnabled(True)
        icon = QIcon()
        icon.addFile(u"bounding-box.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionBox.setIcon(icon)
        self.actionBox.setShortcutContext(Qt.ShortcutContext.WidgetWithChildrenShortcut)
        self.actionBox.setMenuRole(QAction.MenuRole.ApplicationSpecificRole)
        self.actionPolygonTool = QAction(MainWindow)
        self.actionPolygonTool.setObjectName(u"actionPolygonTool")
        self.actionPolygonTool.setCheckable(True)
        self.actionPolygonTool.setChecked(True)
        self.actionPolygonTool.setEnabled(True)
        icon1 = QIcon()
        icon1.addFile(u"polygon.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPolygonTool.setIcon(icon1)
        self.actionPolygonTool.setShortcutContext(Qt.ShortcutContext.ApplicationShortcut)
        self.actionPolygonTool.setAutoRepeat(True)
        self.actionPolygonTool.setVisible(True)
        self.actionPolygonTool.setMenuRole(QAction.MenuRole.ApplicationSpecificRole)
        self.actiondelete = QAction(MainWindow)
        self.actiondelete.setObjectName(u"actiondelete")
        self.actiondelete.setCheckable(True)
        icon2 = QIcon()
        icon2.addFile(u"delete-icon-1864x2048-bp2i0gor.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actiondelete.setIcon(icon2)
        self.actiondelete.setMenuRole(QAction.MenuRole.ApplicationSpecificRole)
        self.actionUndo = QAction(MainWindow)
        self.actionUndo.setObjectName(u"actionUndo")
        self.actionUndo.setCheckable(True)
        icon3 = QIcon()
        icon3.addFile(u"2349854.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionUndo.setIcon(icon3)
        self.actionUndo.setMenuRole(QAction.MenuRole.ApplicationSpecificRole)
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        sizePolicy1 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy1.setHorizontalStretch(16)
        sizePolicy1.setVerticalStretch(9)
        sizePolicy1.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy1)
        self.centralwidget.setSizeIncrement(QSize(16, 9))
        self.Annotator = Annotator(self.centralwidget)
        self.Annotator.setObjectName(u"Annotator")
        self.Annotator.setEnabled(True)
        self.Annotator.setGeometry(QRect(0, 0, 640, 640))
        self.Annotator.setMinimumSize(QSize(640, 640))
        self.Annotator.setMaximumSize(QSize(640, 640))
        palette1 = QPalette()
        brush1 = QBrush(QColor(66, 66, 66, 255))
        brush1.setStyle(Qt.SolidPattern)
        palette1.setBrush(QPalette.Active, QPalette.Window, brush1)
        palette1.setBrush(QPalette.Inactive, QPalette.Window, brush1)
        palette1.setBrush(QPalette.Disabled, QPalette.Base, brush1)
        palette1.setBrush(QPalette.Disabled, QPalette.Window, brush1)
        self.Annotator.setPalette(palette1)
        self.Annotator.setMouseTracking(True)
        self.Annotator.setFocusPolicy(Qt.FocusPolicy.StrongFocus)
        self.Annotator.setAutoFillBackground(True)
        self.Draw = Draw(self.Annotator)
        self.Draw.setObjectName(u"Draw")
        self.Draw.setGeometry(QRect(8, 8, 624, 624))
        self.Draw.setMinimumSize(QSize(624, 624))
        self.Draw.setMaximumSize(QSize(624, 624))
        self.Draw.setAutoFillBackground(False)
        self.Draw.setStyleSheet(u"background-color: rgba(0, 0, 0, 0)")
        self.Files = Files(self.centralwidget)
        self.Files.setObjectName(u"Files")
        self.Files.setGeometry(QRect(640, 349, 256, 291))
        sizePolicy2 = QSizePolicy(QSizePolicy.Policy.Preferred, QSizePolicy.Policy.Preferred)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.Files.sizePolicy().hasHeightForWidth())
        self.Files.setSizePolicy(sizePolicy2)
        self.Files.setBaseSize(QSize(0, 0))
        self.Files.setMouseTracking(True)
        self.Files.setAcceptDrops(True)
        self.Files.setAutoFillBackground(True)
        self.Files.setFrameShadow(QFrame.Shadow.Sunken)
        self.Files.setTabKeyNavigation(True)
        self.Files.setAlternatingRowColors(True)
        self.Files.setSelectionMode(QAbstractItemView.SelectionMode.SingleSelection)
        self.Classes = Classes(self.centralwidget)
        self.Classes.setObjectName(u"Classes")
        self.Classes.setGeometry(QRect(640, 30, 260, 251))
        self.line = QFrame(self.centralwidget)
        self.line.setObjectName(u"line")
        self.line.setGeometry(QRect(640, 305, 271, 31))
        self.line.setFrameShape(QFrame.Shape.HLine)
        self.line.setFrameShadow(QFrame.Shadow.Sunken)
        self.line_2 = QFrame(self.centralwidget)
        self.line_2.setObjectName(u"line_2")
        self.line_2.setGeometry(QRect(620, 0, 41, 651))
        self.line_2.setFrameShape(QFrame.Shape.VLine)
        self.line_2.setFrameShadow(QFrame.Shadow.Sunken)
        self.line_3 = QFrame(self.centralwidget)
        self.line_3.setObjectName(u"line_3")
        self.line_3.setGeometry(QRect(640, 265, 271, 31))
        self.line_3.setFrameShape(QFrame.Shape.HLine)
        self.line_3.setFrameShadow(QFrame.Shadow.Sunken)
        self.lineEdit = QLineEdit(self.centralwidget)
        self.lineEdit.setObjectName(u"lineEdit")
        self.lineEdit.setGeometry(QRect(640, 280, 261, 41))
        palette2 = QPalette()
        brush2 = QBrush(QColor(0, 0, 0, 255))
        brush2.setStyle(Qt.SolidPattern)
        palette2.setBrush(QPalette.Active, QPalette.WindowText, brush2)
        palette2.setBrush(QPalette.Active, QPalette.Text, brush2)
        brush3 = QBrush(QColor(144, 144, 216, 255))
        brush3.setStyle(Qt.SolidPattern)
        palette2.setBrush(QPalette.Active, QPalette.Base, brush3)
        brush4 = QBrush(QColor(39, 39, 39, 128))
        brush4.setStyle(Qt.SolidPattern)
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette2.setBrush(QPalette.Active, QPalette.PlaceholderText, brush4)
#endif
        palette2.setBrush(QPalette.Inactive, QPalette.WindowText, brush2)
        palette2.setBrush(QPalette.Inactive, QPalette.Text, brush2)
        palette2.setBrush(QPalette.Inactive, QPalette.Base, brush3)
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette2.setBrush(QPalette.Inactive, QPalette.PlaceholderText, brush4)
#endif
        brush5 = QBrush(QColor(255, 255, 255, 255))
        brush5.setStyle(Qt.SolidPattern)
        palette2.setBrush(QPalette.Disabled, QPalette.Base, brush5)
#if QT_VERSION >= QT_VERSION_CHECK(5, 12, 0)
        palette2.setBrush(QPalette.Disabled, QPalette.PlaceholderText, brush4)
#endif
        self.lineEdit.setPalette(palette2)
        self.lineEdit.setCursor(QCursor(Qt.IBeamCursor))
        self.lineEdit.setAutoFillBackground(True)
        self.lineEdit.setPlaceholderText(u"Input Class Name:")
        self.lineEdit.setClearButtonEnabled(False)
        self.Next = QPushButton(self.centralwidget)
        self.Next.setObjectName(u"Next")
        self.Next.setGeometry(QRect(770, 310, 131, 51))
        self.Prev = QPushButton(self.centralwidget)
        self.Prev.setObjectName(u"Prev")
        self.Prev.setGeometry(QRect(640, 310, 131, 51))
        self.New_Ann = QPushButton(self.centralwidget)
        self.New_Ann.setObjectName(u"New_Ann")
        self.New_Ann.setGeometry(QRect(640, -10, 261, 51))
        palette3 = QPalette()
        brush6 = QBrush(QColor(62, 180, 137, 255))
        brush6.setStyle(Qt.SolidPattern)
        palette3.setBrush(QPalette.Active, QPalette.Button, brush6)
        palette3.setBrush(QPalette.Inactive, QPalette.Button, brush6)
        palette3.setBrush(QPalette.Disabled, QPalette.Button, brush6)
        self.New_Ann.setPalette(palette3)
        MainWindow.setCentralWidget(self.centralwidget)
        self.New_Ann.raise_()
        self.Prev.raise_()
        self.Next.raise_()
        self.Files.raise_()
        self.Annotator.raise_()
        self.Classes.raise_()
        self.line.raise_()
        self.line_2.raise_()
        self.line_3.raise_()
        self.lineEdit.raise_()
        self.toolBar = QToolBar(MainWindow)
        self.toolBar.setObjectName(u"toolBar")
        self.toolBar.setEnabled(True)
        sizePolicy3 = QSizePolicy(QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Preferred)
        sizePolicy3.setHorizontalStretch(0)
        sizePolicy3.setVerticalStretch(0)
        sizePolicy3.setHeightForWidth(self.toolBar.sizePolicy().hasHeightForWidth())
        self.toolBar.setSizePolicy(sizePolicy3)
        self.toolBar.setMinimumSize(QSize(0, 0))
        self.toolBar.setMaximumSize(QSize(25, 640))
        self.toolBar.setBaseSize(QSize(25, 640))
        palette4 = QPalette()
        brush7 = QBrush(QColor(71, 71, 71, 255))
        brush7.setStyle(Qt.SolidPattern)
        palette4.setBrush(QPalette.Active, QPalette.WindowText, brush7)
        brush8 = QBrush(QColor(48, 48, 48, 255))
        brush8.setStyle(Qt.SolidPattern)
        palette4.setBrush(QPalette.Active, QPalette.Button, brush8)
        brush9 = QBrush(QColor(0, 85, 0, 255))
        brush9.setStyle(Qt.SolidPattern)
        palette4.setBrush(QPalette.Active, QPalette.Dark, brush9)
        palette4.setBrush(QPalette.Active, QPalette.Mid, brush9)
        brush10 = QBrush(QColor(70, 70, 70, 255))
        brush10.setStyle(Qt.SolidPattern)
        palette4.setBrush(QPalette.Active, QPalette.Text, brush10)
        palette4.setBrush(QPalette.Active, QPalette.ButtonText, brush6)
        brush11 = QBrush(QColor(112, 112, 112, 255))
        brush11.setStyle(Qt.SolidPattern)
        palette4.setBrush(QPalette.Active, QPalette.Base, brush11)
        brush12 = QBrush(QColor(51, 149, 113, 255))
        brush12.setStyle(Qt.SolidPattern)
        palette4.setBrush(QPalette.Active, QPalette.Window, brush12)
        palette4.setBrush(QPalette.Inactive, QPalette.WindowText, brush7)
        palette4.setBrush(QPalette.Inactive, QPalette.Button, brush8)
        palette4.setBrush(QPalette.Inactive, QPalette.Dark, brush9)
        palette4.setBrush(QPalette.Inactive, QPalette.Mid, brush9)
        palette4.setBrush(QPalette.Inactive, QPalette.Text, brush10)
        palette4.setBrush(QPalette.Inactive, QPalette.ButtonText, brush6)
        palette4.setBrush(QPalette.Inactive, QPalette.Base, brush11)
        palette4.setBrush(QPalette.Inactive, QPalette.Window, brush12)
        palette4.setBrush(QPalette.Disabled, QPalette.WindowText, brush9)
        palette4.setBrush(QPalette.Disabled, QPalette.Button, brush8)
        palette4.setBrush(QPalette.Disabled, QPalette.Dark, brush9)
        palette4.setBrush(QPalette.Disabled, QPalette.Mid, brush9)
        palette4.setBrush(QPalette.Disabled, QPalette.Text, brush9)
        palette4.setBrush(QPalette.Disabled, QPalette.ButtonText, brush9)
        palette4.setBrush(QPalette.Disabled, QPalette.Base, brush12)
        palette4.setBrush(QPalette.Disabled, QPalette.Window, brush12)
        self.toolBar.setPalette(palette4)
        self.toolBar.setCursor(QCursor(Qt.ArrowCursor))
        self.toolBar.setMouseTracking(True)
        self.toolBar.setFocusPolicy(Qt.FocusPolicy.StrongFocus)
        self.toolBar.setContextMenuPolicy(Qt.ContextMenuPolicy.ActionsContextMenu)
        self.toolBar.setWindowTitle(u"toolBar")
#if QT_CONFIG(tooltip)
        self.toolBar.setToolTip(u"")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.toolBar.setWhatsThis(u"")
#endif // QT_CONFIG(whatsthis)
        self.toolBar.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.toolBar.setAutoFillBackground(True)
        self.toolBar.setInputMethodHints(Qt.InputMethodHint.ImhNone)
        self.toolBar.setMovable(False)
        self.toolBar.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonIconOnly)
        self.toolBar.setFloatable(True)
        MainWindow.addToolBar(Qt.ToolBarArea.LeftToolBarArea, self.toolBar)
        self.menuBar = QMenuBar(MainWindow)
        self.menuBar.setObjectName(u"menuBar")
        self.menuBar.setGeometry(QRect(0, 0, 921, 33))
        palette5 = QPalette()
        palette5.setBrush(QPalette.Active, QPalette.Window, brush)
        palette5.setBrush(QPalette.Inactive, QPalette.Window, brush)
        palette5.setBrush(QPalette.Disabled, QPalette.Base, brush)
        palette5.setBrush(QPalette.Disabled, QPalette.Window, brush)
        self.menuBar.setPalette(palette5)
        self.menuReturn = QMenu(self.menuBar)
        self.menuReturn.setObjectName(u"menuReturn")
        self.menuSave = QMenu(self.menuBar)
        self.menuSave.setObjectName(u"menuSave")
        self.menuOpen_Images = QMenu(self.menuBar)
        self.menuOpen_Images.setObjectName(u"menuOpen_Images")
        MainWindow.setMenuBar(self.menuBar)

        self.toolBar.addAction(self.actionBox)
        self.toolBar.addAction(self.actionPolygonTool)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actiondelete)
        self.toolBar.addAction(self.actionUndo)
        self.menuBar.addAction(self.menuReturn.menuAction())
        self.menuBar.addAction(self.menuSave.menuAction())
        self.menuBar.addAction(self.menuOpen_Images.menuAction())

        self.retranslateUi(MainWindow)

        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"MainWindow", None))
        self.actionBox.setText(QCoreApplication.translate("MainWindow", u"Box", None))
#if QT_CONFIG(tooltip)
        self.actionBox.setToolTip(QCoreApplication.translate("MainWindow", u"Bounding Box Mode", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionBox.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+B", None))
#endif // QT_CONFIG(shortcut)
        self.actionPolygonTool.setText(QCoreApplication.translate("MainWindow", u"PolygonTool", None))
#if QT_CONFIG(tooltip)
        self.actionPolygonTool.setToolTip(QCoreApplication.translate("MainWindow", u"FreeForm selection mode", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionPolygonTool.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+P", None))
#endif // QT_CONFIG(shortcut)
        self.actiondelete.setText(QCoreApplication.translate("MainWindow", u"delete", None))
#if QT_CONFIG(tooltip)
        self.actiondelete.setToolTip(QCoreApplication.translate("MainWindow", u"remove annotations", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actiondelete.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Alt+Shift+D", None))
#endif // QT_CONFIG(shortcut)
        self.actionUndo.setText(QCoreApplication.translate("MainWindow", u"Undo", None))
#if QT_CONFIG(shortcut)
        self.actionUndo.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Z", None))
#endif // QT_CONFIG(shortcut)
#if QT_CONFIG(whatsthis)
        self.Files.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
        self.lineEdit.setText("")
        self.Next.setText(QCoreApplication.translate("MainWindow", u"Next", None))
        self.Prev.setText(QCoreApplication.translate("MainWindow", u"Previous", None))
        self.New_Ann.setText(QCoreApplication.translate("MainWindow", u"New Annotation", None))
        self.menuReturn.setTitle(QCoreApplication.translate("MainWindow", u"Return", None))
        self.menuSave.setTitle(QCoreApplication.translate("MainWindow", u"Save", None))
        self.menuOpen_Images.setTitle(QCoreApplication.translate("MainWindow", u"Open Images", None))
    # retranslateUi

